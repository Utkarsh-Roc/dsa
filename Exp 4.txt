Exp 4:
#include <stdio.h>
#include <stdlib.h>

// Node structure
struct Node {
    int data;
    struct Node* next;
};

// Function to create a new node
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

// Function to create a linked list with 'n' nodes
struct Node* createLinkedList(int n) {
    struct Node* head = NULL;
    struct Node* temp = NULL;
    int data;

    for (int i = 0; i < n; i++) {
        printf("Enter data for node %d: ", i + 1);
        scanf("%d", &data);
        struct Node* newNode = createNode(data);
        if (head == NULL) {
            head = newNode;
            temp = head;
        } else {
            temp->next = newNode;
            temp = temp->next;
        }
    }
    return head;
}

// Function to copy a linked list
struct Node* copyLinkedList(struct Node* head) {
    if (head == NULL) return NULL;

    struct Node* newHead = createNode(head->data);
    struct Node* tempOriginal = head->next;
    struct Node* tempNew = newHead;

    while (tempOriginal != NULL) {
        tempNew->next = createNode(tempOriginal->data);
        tempNew = tempNew->next;
        tempOriginal = tempOriginal->next;
    }

    return newHead;
}

// Function to display a linked list
void displayLinkedList(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

int main() {
    struct Node* originalList = NULL;
    struct Node* copiedList = NULL;

    printf("Create the original linked list:\n");
    originalList = createLinkedList(5);

    printf("\nOriginal Linked List: ");
    displayLinkedList(originalList);

    copiedList = copyLinkedList(originalList);

    printf("\nCopied Linked List: ");
    displayLinkedList(copiedList);

    return 0;
}
